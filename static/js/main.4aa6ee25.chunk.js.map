{"version":3,"sources":["context/currentUserContext.js","hooks/useLocalStorage.js","hooks/authImitation.js","components/currentUserChecker.js","components/topBar.js","hooks/useFetch.js","pages/cardItem/index.js","utils.js","pages/authentication/index.js","components/pagination.js","components/select.js","pages/main/index.js","components/privateRoute.js","routes.js","index.js"],"names":["CurrentUserContext","createContext","CurrentUserProvider","children","useState","isLoading","isLoggedIn","currentUser","state","setState","Provider","value","key","initialValue","localStorage","getItem","setValue","useEffect","setItem","useLocalStorage","token","setIsLoading","response","setResponse","error","setError","options","setOptions","otp","setOtp","doFetch","useCallback","requestOptions","headers","authorization","console","log","user","name","id","data","email","password","Math","ceil","random","CurrentUserChecker","authImitation","useContext","setCurrentUserState","TopBar","className","to","onClick","removeItem","url","axios","then","res","catch","CardItem","props","useFetch","match","params","card","imageUrlHiRes","src","alt","style","maxWidth","ability","text","map","textItem","types","subtype","attacks","item","cost","index","resistances","type","evolvesFrom","inputFilter","arr","event","setFilter","result","forEach","toLowerCase","indexOf","target","push","validateEmail","test","String","validatePassword","Authentication","setPassword","setEmail","isSuccessfullSubmit","setIsSuccessfullSubmit","setToken","currentUserState","backError","otpInput","setOtpInput","isDataValid","setIsDataValid","isValidInputs","setIsValidInputs","marginTop","onSubmit","e","preventDefault","method","htmlFor","onChange","disabled","PaginationItem","page","currentPage","liClasses","pageItem","Pagination","start","end","total","limit","pagesCount","pages","Array","keys","el","arrayOfRenderedPages","length","paginationOffset","paginationRender","Select","isOpen","setIsOpen","label","Main","isLoadingTypes","responseTypes","errorTypes","doFetchTypes","isLoadingSubTypes","responseSubTypes","errorSubTypes","doFetchSubTypes","currentSelect","setCurrentSelect","subtypesFilter","setSubtypesFilter","typesFilter","setTypesFilter","inputsValues","setInputsValues","isLoadingCards","responseCards","errorCards","doFetchCards","setParams","subtypes","subtypeId","typeId","pageSize","parseInt","location","search","replace","defaultValue","cards","imageUrl","artist","pathname","from","PrivateRoute","Component","component","rest","render","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aa6ee25.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\r\nimport React from 'react';\r\n\r\nexport const CurrentUserContext = createContext([{}, () => {}]);\r\n\r\nexport const CurrentUserProvider = ({ children }) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isLoggedIn: null,\r\n    currentUser: null,\r\n  });\r\n  return (\r\n    <CurrentUserContext.Provider value={[state, setState]}>\r\n      {children}\r\n    </CurrentUserContext.Provider>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport default (key, initialValue = '') => {\r\n  const [value, setValue] = useState(() => {\r\n    return localStorage.getItem(key) || initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, value);\r\n  }, [value, key]);\r\n\r\n  return [value, setValue];\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nexport default () => {\r\n  const [token] = useLocalStorage('token');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState({});\r\n  const [otp, setOtp] = useState('');\r\n\r\n  const doFetch = useCallback((options = {}) => {\r\n    setOptions(options);\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const requestOptions = {\r\n      ...options,\r\n      ...{\r\n        headers: {\r\n          authorization: token ? `Token ${token}` : '',\r\n        },\r\n      },\r\n    };\r\n    console.log(requestOptions);\r\n    if (!isLoading) return;\r\n    if (requestOptions.headers.authorization) {\r\n      // В компоненте currentUserChecker идет запрос на указанный адрес с проверкой является\r\n      // ли токен из localstorage реальным. В реалиях не серверной авторизации пока не придумал\r\n      // как добиться такой проверки\r\n      setIsLoading(false);\r\n      setResponse({\r\n        user: {\r\n          name: 'KODEr',\r\n          id: 1,\r\n          token: requestOptions.headers.authorization,\r\n        },\r\n      });\r\n    }\r\n    if (\r\n      requestOptions.data &&\r\n      requestOptions.data.user.email === 'kode@kode.ru' &&\r\n      requestOptions.data.user.password === 'Enk0deng'\r\n    ) {\r\n      setIsLoading(false);\r\n      setOtp(Math.ceil(Math.random() * 10000));\r\n      setResponse({\r\n        user: {\r\n          name: 'KODEr',\r\n          id: 1,\r\n          token: Math.random(),\r\n        },\r\n      });\r\n    } else {\r\n      setIsLoading(false);\r\n      setError('Invalid data');\r\n    }\r\n  }, [isLoading, options, token]);\r\n  return [\r\n    {\r\n      isLoading,\r\n      response,\r\n      error,\r\n      otp,\r\n    },\r\n    doFetch,\r\n  ];\r\n};\r\n","//Core\r\nimport { useContext, useEffect } from 'react';\r\nimport { CurrentUserContext } from '../context/currentUserContext';\r\nimport authImitation from '../hooks/authImitation';\r\n\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\n//Context\r\nconst CurrentUserChecker = ({ children }) => {\r\n  const [{ response }, doFetch] = authImitation();\r\n  const [, setCurrentUserState] = useContext(CurrentUserContext);\r\n  const [token] = useLocalStorage('token');\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setCurrentUserState((state) => ({\r\n        ...state,\r\n        isLoggedIn: false,\r\n      }));\r\n      return;\r\n    }\r\n\r\n    doFetch(); // отправка запроса на сервер для проверки токена из localstorage\r\n\r\n    setCurrentUserState((state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }));\r\n  }, [setCurrentUserState, token, doFetch]);\r\n\r\n  useEffect(() => {\r\n    if (!response) return;\r\n\r\n    setCurrentUserState((state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      isLoggedIn: true,\r\n      currentUser: response.user,\r\n    }));\r\n  }, [response, setCurrentUserState]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default CurrentUserChecker;\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CurrentUserContext } from '../context/currentUserContext';\r\n\r\nconst TopBar = () => {\r\n  const [, setCurrentUserState] = useContext(CurrentUserContext);\r\n\r\n  const logoutHanlder = () => {\r\n    setCurrentUserState((state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      isLoggedIn: null,\r\n      currentUser: null,\r\n    }));\r\n    localStorage.removeItem('token');\r\n  };\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-dark bg-dark d-flex justify-content-between\">\r\n        <div className=\"container\">\r\n          <NavLink className=\"btn btn-primary\" to=\"/\">\r\n            Back\r\n          </NavLink>\r\n          <NavLink onClick={() => logoutHanlder()} className=\"\" to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import axios from 'axios';\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nexport default (url) => {\r\n  const baseUrl = 'https://api.pokemontcg.io/v1';\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState({});\r\n\r\n  const doFetch = useCallback((options = {}) => {\r\n    setOptions(options);\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) return;\r\n    axios(baseUrl + url, options)\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        setResponse(res);\r\n      })\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setError(error);\r\n      });\r\n  }, [isLoading, options, url]);\r\n  return [\r\n    {\r\n      isLoading,\r\n      response,\r\n      error,\r\n    },\r\n    doFetch,\r\n  ];\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nconst CardItem = (props) => {\r\n  const [{ isLoading, response, error }, doFetch] = useFetch(\r\n    `/cards/${props.match.params.id}`\r\n  );\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, [doFetch]);\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card card-item my-3\">\r\n        <div className=\"row no-gutters\">\r\n          {!response && isLoading && <h1>Loading...</h1>}\r\n          {!response && error && <h1>error...</h1>}\r\n          {response && (\r\n            <>\r\n              <div className=\"col-md-6\">\r\n                {response.data.card.imageUrlHiRes && (\r\n                  <img\r\n                    src={response.data.card.imageUrlHiRes}\r\n                    alt={`${response.data.card.name} img`}\r\n                    style={{ maxWidth: '100%' }}\r\n                    className=\"card-img\"\r\n                  />\r\n                )}\r\n\r\n                {(response.data.card.ability && (\r\n                  <div className=\"card-item__description m-4\">\r\n                    {response.data.card.ability.text}{' '}\r\n                  </div>\r\n                )) ||\r\n                  (response.data.card.text && (\r\n                    <div className=\"card-item__description m-4\">\r\n                      {response.data.card.text.map((textItem) => textItem)}{' '}\r\n                    </div>\r\n                  )) ||\r\n                  null}\r\n              </div>\r\n              <div className=\"col-md-5 ml-5\">\r\n                <div className=\"card-body\">\r\n                  <h1 className=\"card-title\">\r\n                    {response.data.card.name\r\n                      ? response.data.card.name\r\n                      : \"Doesn't have name???\"}\r\n                  </h1>\r\n                  {response.data.card.types && (\r\n                    <div className=\"card-text card__type\">\r\n                      Types: {response.data.card.types}\r\n                    </div>\r\n                  )}\r\n                  {response.data.card.subtype && (\r\n                    <div className=\"card-text card__subtype\">\r\n                      SubType: {response.data.card.subtype}\r\n                    </div>\r\n                  )}\r\n                  <hr />\r\n                  <div className=\"card-text card__attacks\">\r\n                    <strong>Attacks:</strong>\r\n                    {response.data.card.attacks\r\n                      ? response.data.card.attacks.map((item) => (\r\n                          <div key={item.name}>\r\n                            <div>Attack Name: {item.name}</div>\r\n                            {item.text && <div>Description: </div> && item.text}\r\n                            <div>\r\n                              Cost:{' '}\r\n                              {item.cost.map((cost, index) => (\r\n                                <span key={index}>{`${cost}`}, </span>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        ))\r\n                      : ' N/A'}\r\n                    <hr />\r\n                  </div>\r\n                  <div className=\"card-text card__resistance\">\r\n                    <strong>Resistance:</strong>\r\n                    {response.data.card.resistances\r\n                      ? response.data.card.resistances.map((item, index) => (\r\n                          <p key={index}>\r\n                            Type: {item.type}\r\n                            <br />\r\n                            Value: {item.value}\r\n                          </p>\r\n                        ))\r\n                      : ' N/A'}\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"card-text card__evolves-from\">\r\n                    <strong>Evolves From: </strong>\r\n                    {response.data.card.evolvesFrom ? (\r\n                      <span>{response.data.card.evolvesFrom}</span>\r\n                    ) : (\r\n                      ' N/A'\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n\r\n// Почти хорошо, еще раз посмотреть перед отправкой\r\n","export const range = (start, end) => {\r\n  return [...Array(end).keys()].map((el) => el + start);\r\n};\r\n\r\nexport const cardLimit = 15;\r\n\r\nexport const inputFilter = (arr, event, setFilter) => {\r\n  let result = [];\r\n  arr.forEach((value) => {\r\n    if (value.toLowerCase().indexOf(event.target.value.toLowerCase()) === 0) {\r\n      result.push(value);\r\n    }\r\n    return value;\r\n  });\r\n  setFilter(result);\r\n  return result;\r\n};\r\n\r\nexport const validateEmail = (email) => {\r\n  const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n\r\nexport const validatePassword = (password) => {\r\n  const re = /^[0-9a-zA-Z]{4,}$/;\r\n  return re.test(String(password));\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CurrentUserContext } from '../../context/currentUserContext';\r\nimport authImitation from '../../hooks/authImitation';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport { validateEmail, validatePassword } from '../../utils';\r\n\r\nconst Authentication = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false);\r\n  const [, setToken] = useLocalStorage('token');\r\n  const [{ isLoading, response, error, otp }, doFetch] = authImitation();\r\n  const [currentUserState, setCurrentUserState] = useContext(\r\n    CurrentUserContext\r\n  );\r\n  const [backError, setError] = useState('');\r\n  const [otpInput, setOtpInput] = useState('');\r\n  const [isDataValid, setIsDataValid] = useState(false);\r\n  const [isValidInputs, setIsValidInputs] = useState({\r\n    email: true,\r\n    password: true,\r\n  });\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsValidInputs({\r\n      email: validateEmail(email),\r\n      password: validatePassword(password),\r\n    });\r\n    if (!isValidInputs.email || !isValidInputs.email) return;\r\n    const user = { email, password };\r\n    doFetch({\r\n      method: 'post',\r\n      data: {\r\n        user,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error && setError(() => <p>Invalid data</p>));\r\n    if (!response) return;\r\n    console.log('OTP:', otp);\r\n    setIsDataValid(true);\r\n  }, [response, error, otp]);\r\n\r\n  const onOtpConfirm = (e) => {\r\n    e.preventDefault();\r\n    if (otp === +otpInput) {\r\n      setToken(response.user.token);\r\n      setCurrentUserState((state) => ({\r\n        ...state,\r\n        isLoading: false,\r\n        isLoggedIn: true,\r\n        currentUser: response.user,\r\n      }));\r\n      setIsSuccessfullSubmit(true);\r\n    }\r\n  };\r\n\r\n  if (isSuccessfullSubmit) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!currentUserState.isLoggedIn ? (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 mx-auto\" style={{ marginTop: '25vh' }}>\r\n              <h1>Auth</h1>\r\n              {!isDataValid && (\r\n                <form onSubmit={onHandleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"loginInput\">Login</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      id=\"loginInput\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    {!isValidInputs.email ? <p>Некорректный email</p> : null}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"passwordInput\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"passwordInput\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    {!isValidInputs.password ? (\r\n                      <p>Некорректный password</p>\r\n                    ) : null}\r\n                  </div>\r\n                  {backError && backError}\r\n                  <button\r\n                    disabled={isLoading}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Log in\r\n                  </button>\r\n                </form>\r\n              )}\r\n              {isDataValid && (\r\n                <form onSubmit={onOtpConfirm}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"otpInput\">Otp</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"otpInput\"\r\n                      onChange={(e) => setOtpInput(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  {backError && backError}\r\n                  <button\r\n                    disabled={isLoading}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Confirm\r\n                  </button>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { range } from '../utils';\r\n\r\nconst PaginationItem = ({ page, currentPage, url }) => {\r\n  const liClasses = {\r\n    pageItem: currentPage === page ? 'active page-item' : 'page-item',\r\n  };\r\n  return (\r\n    <li className={liClasses.pageItem}>\r\n      <Link className=\"page-link\" to={`${url}?page=${page}`}>\r\n        {page}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Pagination = ({ total, limit, url, currentPage }) => {\r\n  const pagesCount = Math.ceil(total / limit); // подсчет количества страниц\r\n  const pages = range(1, pagesCount); // массив по количеству страниц\r\n  const paginationOffset = 3; // отступы справа и слева для страниц при пагинации\r\n  //Например для страницы 5 при отступе 3 будет [first page, prev page, 5,6,7 nextpage, lastpage]\r\n  const arrayOfRenderedPages = []; // Массив в который будут записываться числа для пагинации\r\n\r\n  if (pages.length === 0) return null;\r\n\r\n  const conditionForRender = () => {\r\n    // Условия отсупов при пагинации\r\n    if (pages.length < paginationOffset * 2) return 1; // для рендера пагинации с маленьким количеством страниц\r\n    if (currentPage + paginationOffset >= pages.length)\r\n      // для рендера последних страниц\r\n      return pages.length - paginationOffset * 2 + 1; // +1 для корректного рендера последней страницы\r\n    if (currentPage - paginationOffset > 0)\r\n      // для рендера страниц по центру массива\r\n      return currentPage - paginationOffset;\r\n    if (currentPage - paginationOffset <= 0) return 1; // для рендера первых страниц\r\n  };\r\n  const paginationRender = () => {\r\n    //Рендер пагинации\r\n    for (let page = conditionForRender(); page - 1 < pages.length; page++) {\r\n      arrayOfRenderedPages.push(page);\r\n      if (pages.length === page) {\r\n        // если страницы закончились\r\n        return [...arrayOfRenderedPages];\r\n      }\r\n      if (arrayOfRenderedPages.length >= paginationOffset * 2) {\r\n        // если массив заполнился\r\n        return [...arrayOfRenderedPages];\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination justify-content-center my-5\">\r\n      {currentPage > paginationOffset + 1 ? (\r\n        <li className=\"page-item\">\r\n          <Link className=\"page-link\" to={`${url}?page=1`}>\r\n            First page\r\n          </Link>\r\n        </li>\r\n      ) : null}\r\n      {currentPage > 1 ? (\r\n        <li className=\"\">\r\n          <Link className=\"page-link\" to={`${url}?page=${currentPage - 1}`}>\r\n            Prev page\r\n          </Link>\r\n        </li>\r\n      ) : null}\r\n      {paginationRender().map((page) => (\r\n        <PaginationItem\r\n          page={page}\r\n          currentPage={currentPage}\r\n          url={url}\r\n          key={page}\r\n        />\r\n      ))}\r\n      {currentPage + 1 <= pages.length ? (\r\n        <li className=\"\">\r\n          <Link className=\"page-link\" to={`${url}?page=${currentPage + 1}`}>\r\n            Next page\r\n          </Link>\r\n        </li>\r\n      ) : null}\r\n      {currentPage + paginationOffset + 1 < pages.length ? (\r\n        <li className=\"\">\r\n          <Link className=\"page-link\" to={`${url}?page=${pages.length}`}>\r\n            Last page\r\n          </Link>\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from 'react';\r\n\r\nconst Select = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleIsOpen = () => {\r\n    if (isOpen) setIsOpen(false);\r\n    if (!isOpen) setIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <button onClick={() => toggleIsOpen()}>\r\n        {<div className=\"card-header\">{props.label}</div> || 'Loading..'}\r\n      </button>\r\n      {isOpen && (\r\n        <ul className=\"list-group list-group-flush\">\r\n          {props.error && <li className=\"list-group-item\">Error</li>}\r\n          {props.isLoading && <li className=\"list-group-item\">Loading...</li>}\r\n          {props.children}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Pagination from '../../components/pagination';\r\nimport Select from '../../components/select';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { cardLimit, inputFilter } from '../../utils';\r\n\r\nconst Main = (props) => {\r\n  //hooks\r\n  //types hooks\r\n  const [\r\n    { isLoading: isLoadingTypes, response: responseTypes, error: errorTypes },\r\n    doFetchTypes,\r\n  ] = useFetch(`/types`);\r\n  const [\r\n    {\r\n      isLoading: isLoadingSubTypes,\r\n      response: responseSubTypes,\r\n      error: errorSubTypes,\r\n    },\r\n    doFetchSubTypes,\r\n  ] = useFetch(`/subtypes`);\r\n  const [currentSelect, setCurrentSelect] = useState({});\r\n  const [subtypesFilter, setSubtypesFilter] = useState();\r\n  const [typesFilter, setTypesFilter] = useState();\r\n  const [inputsValues, setInputsValues] = useState({\r\n    type: '',\r\n    subtype: '',\r\n  });\r\n  //cards hooks\r\n  const [\r\n    { isLoading: isLoadingCards, response: responseCards, error: errorCards },\r\n    doFetchCards,\r\n  ] = useFetch('/cards');\r\n  const [params, setParams] = useState('');\r\n\r\n  //получение селектов\r\n  useEffect(() => {\r\n    doFetchTypes();\r\n    doFetchSubTypes();\r\n  }, [doFetchTypes, doFetchSubTypes]);\r\n\r\n  // добавление типов и подтипов в state для фильта\r\n\r\n  useEffect(() => {\r\n    setSubtypesFilter(responseSubTypes && responseSubTypes.data.subtypes);\r\n    setTypesFilter(responseTypes && responseTypes.data.types);\r\n  }, [setSubtypesFilter, setTypesFilter, responseSubTypes, responseTypes]);\r\n\r\n  // сетим параметры селектов, если они заданы в url\r\n  useEffect(() => {\r\n    if (!currentSelect.subtype && props.match.params.subtypeId) {\r\n      setCurrentSelect({\r\n        ...currentSelect,\r\n        subtype: props.match.params.subtypeId,\r\n      });\r\n    }\r\n    if (!currentSelect.type && props.match.params.typeId) {\r\n      setCurrentSelect({\r\n        ...currentSelect,\r\n        type: props.match.params.typeId,\r\n      });\r\n    }\r\n  }, [props.match.params.subtypeId, props.match.params.typeId, currentSelect]);\r\n\r\n  //сетим параметры для fetch\r\n  useEffect(() => {\r\n    setParams({\r\n      method: 'get',\r\n      params: {\r\n        types: currentSelect.type || props.match.params.typeId || null,\r\n        subtype: currentSelect.subtype || props.match.params.subtypeId || null,\r\n        pageSize: cardLimit,\r\n        page: parseInt(props.location.search.replace(/[^\\d]/g, '')) || 1,\r\n      },\r\n    });\r\n  }, [props.match, props.location.search, currentSelect]);\r\n\r\n  // запрос на сервер с указанными параметрами\r\n  useEffect(() => {\r\n    params && doFetchCards(params);\r\n  }, [doFetchCards, params]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 selects\">\r\n          {/* рендер селектов происходит здесь для того чтобы просто сетить данные */}\r\n          <Select\r\n            error={errorTypes ? errorTypes : null}\r\n            isLoading={isLoadingTypes ? isLoadingTypes : null}\r\n            label=\"Types\"\r\n          >\r\n            {responseTypes && (\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  inputFilter(responseTypes.data.types, e, setTypesFilter);\r\n                  setInputsValues({\r\n                    ...inputsValues,\r\n                    type: e.target.value,\r\n                  });\r\n                }}\r\n                defaultValue={inputsValues.type || ''}\r\n              />\r\n            )}\r\n            <li className=\"list-group-item\">\r\n              <NavLink\r\n                onClick={() =>\r\n                  setCurrentSelect({\r\n                    ...currentSelect,\r\n                    type: null,\r\n                  })\r\n                }\r\n                to={\r\n                  currentSelect.subtype\r\n                    ? `/cards/subtype/${currentSelect.subtype}`\r\n                    : '/'\r\n                }\r\n              >\r\n                All Types\r\n              </NavLink>\r\n            </li>\r\n            {typesFilter &&\r\n              typesFilter.map((type, index) => (\r\n                <li key={index} className=\"list-group-item\">\r\n                  <NavLink\r\n                    onClick={() =>\r\n                      setCurrentSelect({\r\n                        ...currentSelect,\r\n                        type: type,\r\n                      })\r\n                    }\r\n                    to={\r\n                      currentSelect.subtype\r\n                        ? `/cards/type/${type}/subtype/${currentSelect.subtype}`\r\n                        : `/cards/type/${type}`\r\n                    }\r\n                  >\r\n                    {type}\r\n                  </NavLink>\r\n                </li>\r\n              ))}\r\n          </Select>\r\n          <Select\r\n            error={errorSubTypes ? errorSubTypes : null}\r\n            isLoading={isLoadingSubTypes ? isLoadingSubTypes : null}\r\n            label=\"Subtypes\"\r\n          >\r\n            {responseSubTypes && (\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  inputFilter(\r\n                    responseSubTypes.data.subtypes,\r\n                    e,\r\n                    setSubtypesFilter\r\n                  );\r\n                  setInputsValues({\r\n                    ...inputsValues,\r\n                    subtype: e.target.value,\r\n                  });\r\n                }}\r\n                defaultValue={inputsValues.subtype || ''}\r\n              />\r\n            )}\r\n            <li className=\"list-group-item\">\r\n              <NavLink\r\n                onClick={() =>\r\n                  setCurrentSelect({\r\n                    ...currentSelect,\r\n                    subtype: null,\r\n                  })\r\n                }\r\n                to={\r\n                  currentSelect.type ? `/cards/type/${currentSelect.type}` : '/'\r\n                }\r\n              >\r\n                All Subtypes\r\n              </NavLink>\r\n            </li>\r\n            {subtypesFilter &&\r\n              subtypesFilter.map((subtype, index) => (\r\n                <li key={index} className=\"list-group-item\">\r\n                  <NavLink\r\n                    onClick={() =>\r\n                      setCurrentSelect({\r\n                        ...currentSelect,\r\n                        subtype: subtype,\r\n                      })\r\n                    }\r\n                    to={\r\n                      currentSelect.type\r\n                        ? `/cards/type/${currentSelect.type}/subtype/${subtype}`\r\n                        : `/cards/subtype/${subtype}`\r\n                    }\r\n                  >\r\n                    {subtype}\r\n                  </NavLink>\r\n                </li>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n        <div className=\"col-md-8 cards\">\r\n          <div className=\"row\">\r\n            {errorCards && <div className=\"error\">Error</div>}\r\n            {isLoadingCards && <div className=\"loading\">Loading</div>}\r\n            {!isLoadingCards &&\r\n              responseCards &&\r\n              responseCards.data.cards.map((card) => (\r\n                <div className=\"col-md-4 rounded\" key={card.id}>\r\n                  <div className=\"card mt-3\">\r\n                    <img\r\n                      className=\"card-img-top\"\r\n                      src={card.imageUrl}\r\n                      alt={`${card.name} img`}\r\n                    />\r\n                    <div className=\"card-body\">\r\n                      <h3 className=\"card-title\">{card.name}</h3>\r\n                      <div className=\"card-text\">Artist: {card.artist}</div>\r\n                    </div>\r\n                    <Link\r\n                      className=\"btn btn-primary\"\r\n                      // to={pathname `/cards/${card.id}`}\r\n                      to={{\r\n                        pathname: `/cards/${card.id}`,\r\n                        state: { from: props.location },\r\n                      }}\r\n                    >\r\n                      Подробнее\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          {responseCards && (\r\n            <Pagination\r\n              total={responseCards.headers['total-count']}\r\n              limit={cardLimit}\r\n              currentPage={\r\n                parseInt(props.location.search.replace(/[^\\d]/g, '')) || 1\r\n              }\r\n              url={`${props.match.url}`}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const [token] = useLocalStorage('token');\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        token ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: '/login', state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport CardItem from './pages/cardItem';\r\nimport Authentication from './pages/authentication';\r\nimport Main from './pages/main';\r\nimport PrivateRoute from './components/privateRoute';\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"login\" component={Authentication} />\r\n      <PrivateRoute path=\"\" exact component={Main} />\r\n      <PrivateRoute path=\"cards/:id\" exact component={CardItem} />\r\n      <PrivateRoute path=\"cards/type/:typeId\" exact component={Main} />\r\n      <PrivateRoute path=\"cards/subtype/:subtypeId\" component={Main} />\r\n      <PrivateRoute\r\n        path=\"cards/type/:typeId/subtype/:subtypeId\"\r\n        component={Main}\r\n      />\r\n      <Redirect to=\"\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport CurrentUserChecker from './components/currentUserChecker';\nimport TopBar from './components/topBar';\nimport { CurrentUserProvider } from './context/currentUserContext';\nimport Routes from './routes';\n\nReactDOM.render(\n  <CurrentUserProvider>\n    <CurrentUserChecker>\n      <React.StrictMode>\n        <BrowserRouter>\n          <TopBar />\n          <Routes />\n        </BrowserRouter>\n      </React.StrictMode>\n    </CurrentUserChecker>\n  </CurrentUserProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}