{"version":3,"sources":["images/404.png","images/logo.png","context/currentUserContext.js","hooks/useLocalStorage.js","hooks/useAuthImitation.js","components/currentUserChecker.js","components/error404.js","components/topBar.js","hooks/useFetch.js","components/loading.js","pages/cardItem/index.js","utils.js","pages/authentication/index.js","components/pagination.js","components/select.js","pages/main/index.js","components/privateRoute.js","routes.js","index.js"],"names":["module","exports","CurrentUserContext","createContext","CurrentUserProvider","children","useState","isLoading","isLoggedIn","currentUser","state","setState","Provider","value","key","initialValue","localStorage","getItem","setValue","useEffect","setItem","useLocalStorage","token","setIsLoading","response","setResponse","error","setError","options","setOptions","otp","setOtp","doFetch","useCallback","requestOptions","headers","authorization","user","name","id","data","email","password","Math","ceil","random","CurrentUserChecker","authImitation","useContext","setCurrentUserState","Error404","className","style","textAlign","src","errImg","alt","TopBar","props","location","from","pathname","prevPage","detail","height","to","padding","logoImg","onClick","removeItem","url","axios","then","res","catch","Loading","CardItem","useFetch","match","params","status","card","imageUrlHiRes","maxWidth","ability","text","map","textItem","types","subtype","attacks","item","cost","index","resistances","type","evolvesFrom","inputFilter","arr","event","setFilter","result","forEach","toLowerCase","indexOf","target","push","validateEmail","test","String","validatePassword","Authentication","setPassword","setEmail","isSuccessfullSubmit","setIsSuccessfullSubmit","setToken","currentUserState","backError","setBackError","otpInput","setOtpInput","isDataValid","setIsDataValid","isValidInputs","setIsValidInputs","console","log","marginTop","onSubmit","e","preventDefault","method","htmlFor","onChange","disabled","PaginationItem","page","currentPage","liClasses","pageItem","Pagination","start","end","total","limit","pagesCount","pages","Array","keys","el","arrayOfRenderedPages","length","paginationOffset","width","viewBox","fill","xmlns","fillRule","d","paginationRender","Select","isOpen","setIsOpen","label","Main","isLoadingTypes","responseTypes","errorTypes","doFetchTypes","isLoadingSubTypes","responseSubTypes","errorSubTypes","doFetchSubTypes","currentSelect","setCurrentSelect","subtypesFilter","setSubtypesFilter","typesFilter","setTypesFilter","inputsValues","setInputsValues","isLoadingCards","responseCards","errorCards","doFetchCards","setParams","subtypes","subtypeId","typeId","pageSize","parseInt","search","replace","defaultValue","overflow","cards","imageUrl","artist","PrivateRoute","Component","component","rest","render","path","exact","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.ef4eca9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.626adc7f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.96c5ba35.png\";","import { createContext, useState } from 'react';\r\nimport React from 'react';\r\n\r\nexport const CurrentUserContext = createContext([{}, () => {}]);\r\n\r\nexport const CurrentUserProvider = ({ children }) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isLoggedIn: null,\r\n    currentUser: null,\r\n  });\r\n  return (\r\n    <CurrentUserContext.Provider value={[state, setState]}>\r\n      {children}\r\n    </CurrentUserContext.Provider>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport default (key, initialValue = '') => {\r\n  const [value, setValue] = useState(() => {\r\n    return localStorage.getItem(key) || initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, value);\r\n  }, [value, key]);\r\n\r\n  return [value, setValue];\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nexport default () => {\r\n  const [token] = useLocalStorage('token');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState({});\r\n  const [otp, setOtp] = useState('');\r\n\r\n  const doFetch = useCallback((options = {}) => {\r\n    setOptions(options);\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const requestOptions = {\r\n      ...options,\r\n      ...{\r\n        headers: {\r\n          authorization: token ? `Token ${token}` : '',\r\n        },\r\n      },\r\n    };\r\n    if (!isLoading) return;\r\n    if (requestOptions.headers.authorization) {\r\n      // В компоненте currentUserChecker идет запрос на указанный адрес с проверкой является\r\n      // ли токен из localstorage реальным. В реалиях не серверной авторизации пока не придумал\r\n      // как добиться такой проверки\r\n      setIsLoading(false);\r\n      setResponse({\r\n        user: {\r\n          name: 'KODEr',\r\n          id: 1,\r\n          token: requestOptions.headers.authorization,\r\n        },\r\n      });\r\n    }\r\n    if (\r\n      requestOptions.data &&\r\n      requestOptions.data.user.email === 'kode@kode.ru' &&\r\n      requestOptions.data.user.password === 'Enk0deng'\r\n    ) {\r\n      setIsLoading(false);\r\n      setOtp(Math.ceil(Math.random() * 10000));\r\n      setResponse({\r\n        user: {\r\n          name: 'KODEr',\r\n          id: 1,\r\n          token: Math.random(),\r\n        },\r\n      });\r\n    } else {\r\n      setIsLoading(false);\r\n      setError('Invalid data');\r\n    }\r\n  }, [isLoading, options, token]);\r\n  return [\r\n    {\r\n      isLoading,\r\n      response,\r\n      error,\r\n      otp,\r\n    },\r\n    doFetch,\r\n  ];\r\n};\r\n","//Core\r\nimport { useContext, useEffect } from 'react';\r\nimport { CurrentUserContext } from '../context/currentUserContext';\r\nimport authImitation from '../hooks/useAuthImitation';\r\n\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\n//Context\r\nconst CurrentUserChecker = ({ children }) => {\r\n  const [{ response }, doFetch] = authImitation();\r\n  const [, setCurrentUserState] = useContext(CurrentUserContext);\r\n  const [token] = useLocalStorage('token');\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setCurrentUserState((state) => ({\r\n        ...state,\r\n        isLoggedIn: false,\r\n      }));\r\n      return;\r\n    }\r\n\r\n    doFetch(); // отправка запроса на сервер для проверки токена из localstorage\r\n\r\n    setCurrentUserState((state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }));\r\n  }, [setCurrentUserState, token, doFetch]);\r\n\r\n  useEffect(() => {\r\n    if (!response) return;\r\n\r\n    setCurrentUserState((state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      isLoggedIn: true,\r\n      currentUser: response.user,\r\n    }));\r\n  }, [response, setCurrentUserState]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default CurrentUserChecker;\r\n","import React from 'react';\r\nimport errImg from '../images/404.png';\r\n\r\nconst Error404 = () => {\r\n  return (\r\n    <div className=\"error404\">\r\n      <h1 style={{ textAlign: 'center' }}>\r\n        This is not the pokemon you looking for <hr />\r\n        Error 404\r\n      </h1>\r\n      <div className=\"img col-md-12 justify-content-center d-flex\">\r\n        <img className=\"w-75\" src={errImg} alt=\"404\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CurrentUserContext } from '../context/currentUserContext';\r\nimport logoImg from '../images/logo.png';\r\n\r\nconst TopBar = (props) => {\r\n  const [, setCurrentUserState] = useContext(CurrentUserContext);\r\n  const [prevPage] = useState(\r\n    props.location && props.location.state && props.location.state.from.pathname\r\n  );\r\n\r\n  const logoutHanlder = () => {\r\n    setCurrentUserState((state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      isLoggedIn: null,\r\n      currentUser: null,\r\n    }));\r\n    localStorage.removeItem('token');\r\n  };\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-dark bg-dark d-flex justify-content-between\">\r\n        <div className=\"container\">\r\n          {props.detail ? (\r\n            <Link\r\n              className=\"btn btn-light\"\r\n              style={{ height: '40px' }}\r\n              to={(prevPage && prevPage) || '/'}\r\n            >\r\n              Back\r\n            </Link>\r\n          ) : (\r\n            <Link\r\n              to=\"/\"\r\n              className=\"btn logo\"\r\n              style={{ height: '40px', padding: '0' }}\r\n            >\r\n              <img src={logoImg} alt=\"logo\" height=\"100%\" />\r\n            </Link>\r\n          )}\r\n\r\n          <Link\r\n            className=\"text-light\"\r\n            onClick={() => logoutHanlder()}\r\n            to=\"/login\"\r\n          >\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import axios from 'axios';\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nexport default (url) => {\r\n  const baseUrl = 'https://api.pokemontcg.io/v1';\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState({});\r\n\r\n  const doFetch = useCallback((options = {}) => {\r\n    setOptions(options);\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) return;\r\n    axios(baseUrl + url, options)\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        setResponse(res);\r\n      })\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setError(error.response);\r\n      });\r\n  }, [isLoading, options, url]);\r\n  return [\r\n    {\r\n      isLoading,\r\n      response,\r\n      error,\r\n    },\r\n    doFetch,\r\n  ];\r\n};\r\n","import React from 'react';\r\nimport './loading.css';\r\n\r\nconst Loading = () => (\r\n  <div className=\"lds-ring\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { useEffect } from 'react';\r\nimport Error404 from '../../components/error404';\r\nimport TopBar from '../../components/topBar';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport Loading from '../../components/loading';\r\n\r\nconst CardItem = (props) => {\r\n  const [{ isLoading, response, error }, doFetch] = useFetch(\r\n    `/cards/${props.match.params.id}`\r\n  );\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, [doFetch]);\r\n\r\n  return (\r\n    <>\r\n      <TopBar location={props.location} detail={true} />\r\n      <div className=\"container\">\r\n        <div className=\"card bg-light card-item my-3\">\r\n          <div className=\"row no-gutters justify-content-center\">\r\n            {!response && isLoading && <Loading />}\r\n            {(!response && error && error.data.status === 404 && (\r\n              <Error404 />\r\n            )) ||\r\n              (!response && error && (\r\n                <h1>Error status: {error.data.status}</h1>\r\n              ))}\r\n            {response && (\r\n              <>\r\n                <div className=\"col-md-6\">\r\n                  {response.data.card.imageUrlHiRes && (\r\n                    <img\r\n                      src={response.data.card.imageUrlHiRes}\r\n                      alt={`${response.data.card.name} img`}\r\n                      style={{ maxWidth: '100%' }}\r\n                      className=\"card-img\"\r\n                    />\r\n                  )}\r\n\r\n                  {(response.data.card.ability && (\r\n                    <div className=\"card-item__description m-4\">\r\n                      {response.data.card.ability.text}{' '}\r\n                    </div>\r\n                  )) ||\r\n                    (response.data.card.text && (\r\n                      <div className=\"card-item__description m-4\">\r\n                        {response.data.card.text.map((textItem) => textItem)}{' '}\r\n                      </div>\r\n                    )) ||\r\n                    null}\r\n                </div>\r\n                <div className=\"col-md-5 ml-5\">\r\n                  <div className=\"card-body\">\r\n                    <h1 className=\"card-title\">\r\n                      {response.data.card.name\r\n                        ? response.data.card.name\r\n                        : \"Doesn't have name???\"}\r\n                    </h1>\r\n                    {response.data.card.types && (\r\n                      <div className=\"card-text card__type\">\r\n                        Types: {response.data.card.types}\r\n                      </div>\r\n                    )}\r\n                    {response.data.card.subtype && (\r\n                      <div className=\"card-text card__subtype\">\r\n                        SubType: {response.data.card.subtype}\r\n                      </div>\r\n                    )}\r\n                    <hr />\r\n                    <div className=\"card-text card__attacks\">\r\n                      <strong>Attacks:</strong>\r\n                      {response.data.card.attacks\r\n                        ? response.data.card.attacks.map((item) => (\r\n                            <div key={item.name}>\r\n                              <div>Attack Name: {item.name}</div>\r\n                              {item.text && <div>Description: </div> &&\r\n                                item.text}\r\n                              <div>\r\n                                Cost:{' '}\r\n                                {item.cost.map((cost, index) => (\r\n                                  <span key={index}>{`${cost}`}, </span>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                        : ' N/A'}\r\n                      <hr />\r\n                    </div>\r\n                    <div className=\"card-text card__resistance\">\r\n                      <strong>Resistance:</strong>\r\n                      {response.data.card.resistances\r\n                        ? response.data.card.resistances.map((item, index) => (\r\n                            <p key={index}>\r\n                              Type: {item.type}\r\n                              <br />\r\n                              Value: {item.value}\r\n                            </p>\r\n                          ))\r\n                        : ' N/A'}\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"card-text card__evolves-from\">\r\n                      <strong>Evolves From: </strong>\r\n                      {response.data.card.evolvesFrom ? (\r\n                        <span>{response.data.card.evolvesFrom}</span>\r\n                      ) : (\r\n                        ' N/A'\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n\r\n// Почти хорошо, еще раз посмотреть перед отправкой\r\n","export const range = (start, end) => {\r\n  return [...Array(end).keys()].map((el) => el + start);\r\n};\r\n\r\nexport const cardLimit = 6;\r\n\r\nexport const inputFilter = (arr, event, setFilter) => {\r\n  let result = [];\r\n  arr.forEach((value) => {\r\n    if (value.toLowerCase().indexOf(event.target.value.toLowerCase()) === 0) {\r\n      result.push(value);\r\n    }\r\n    return value;\r\n  });\r\n  setFilter(result);\r\n  return result;\r\n};\r\n\r\nexport const validateEmail = (email) => {\r\n  const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n\r\nexport const validatePassword = (password) => {\r\n  const re = /^[0-9a-zA-Z]{4,}$/;\r\n  return re.test(String(password));\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CurrentUserContext } from '../../context/currentUserContext';\r\nimport authImitation from '../../hooks/useAuthImitation';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport { validateEmail, validatePassword } from '../../utils';\r\n\r\nconst Authentication = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false);\r\n  const [, setToken] = useLocalStorage('token');\r\n  const [{ isLoading, response, error, otp }, doFetch] = authImitation();\r\n  const [currentUserState, setCurrentUserState] = useContext(\r\n    CurrentUserContext\r\n  );\r\n  const [backError, setBackError] = useState('');\r\n  const [otpInput, setOtpInput] = useState('');\r\n  const [isDataValid, setIsDataValid] = useState(false);\r\n  const [isValidInputs, setIsValidInputs] = useState({\r\n    email: true,\r\n    password: true,\r\n  });\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsValidInputs({\r\n      email: validateEmail(email),\r\n      password: validatePassword(password),\r\n    });\r\n    if (!isValidInputs.email || !isValidInputs.email) return;\r\n    const user = { email, password };\r\n    doFetch({\r\n      method: 'post',\r\n      data: {\r\n        user,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error && setBackError(() => <p>Invalid data</p>));\r\n    if (!response) return;\r\n    console.log('OTP:', otp);\r\n    setIsDataValid(true);\r\n  }, [response, error, otp]);\r\n\r\n  const onOtpConfirm = (e) => {\r\n    e.preventDefault();\r\n    if (otp === +otpInput) {\r\n      setToken(response.user.token);\r\n      setCurrentUserState((state) => ({\r\n        ...state,\r\n        isLoading: false,\r\n        isLoggedIn: true,\r\n        currentUser: response.user,\r\n      }));\r\n      setIsSuccessfullSubmit(true);\r\n    }\r\n  };\r\n\r\n  if (isSuccessfullSubmit) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!currentUserState.isLoggedIn ? (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-md-4 mx-auto bg-light p-5 rounded-lg\"\r\n              style={{ marginTop: '25vh' }}\r\n            >\r\n              <h1>Auth</h1>\r\n              {!isDataValid && (\r\n                <form onSubmit={onHandleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"loginInput\">Login</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      id=\"loginInput\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    {!isValidInputs.email ? <p>Некорректный email</p> : null}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"passwordInput\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"passwordInput\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    {!isValidInputs.password ? (\r\n                      <p>Некорректный password</p>\r\n                    ) : null}\r\n                  </div>\r\n                  {backError && backError}\r\n                  <button\r\n                    disabled={isLoading}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Log in\r\n                  </button>\r\n                </form>\r\n              )}\r\n              {isDataValid && (\r\n                <form onSubmit={onOtpConfirm}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"otpInput\">Otp</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"otpInput\"\r\n                      onChange={(e) => setOtpInput(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  {backError && backError}\r\n                  <button\r\n                    disabled={isLoading}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Confirm\r\n                  </button>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { range } from '../utils';\r\n\r\nconst PaginationItem = ({ page, currentPage, url }) => {\r\n  const liClasses = {\r\n    pageItem: currentPage === page ? 'active page-item' : 'page-item',\r\n  };\r\n  return (\r\n    <li className={liClasses.pageItem}>\r\n      <Link\r\n        style={{ height: '38px' }}\r\n        className=\"page-link\"\r\n        to={`${url}?page=${page}`}\r\n      >\r\n        {page}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Pagination = ({ total, limit, url, currentPage }) => {\r\n  const pagesCount = Math.ceil(total / limit); // подсчет количества страниц\r\n  const pages = range(1, pagesCount); // массив по количеству страниц\r\n  const paginationOffset = 3; // отступы справа и слева для страниц при пагинации\r\n  //Например для страницы 5 при отступе 3 будет [first page, prev page, 5,6,7 nextpage, lastpage]\r\n  const arrayOfRenderedPages = []; // Массив в который будут записываться числа для пагинации\r\n\r\n  if (pages.length === 0) return null;\r\n\r\n  const conditionForRender = () => {\r\n    // Условия отсупов при пагинации\r\n    if (pages.length < paginationOffset * 2) return 1; // для рендера пагинации с маленьким количеством страниц\r\n    if (currentPage + paginationOffset >= pages.length)\r\n      // для рендера последних страниц\r\n      return pages.length - paginationOffset * 2 + 1; // +1 для корректного рендера последней страницы\r\n    if (currentPage - paginationOffset > 0)\r\n      // для рендера страниц по центру массива\r\n      return currentPage - paginationOffset;\r\n    if (currentPage - paginationOffset <= 0) return 1; // для рендера первых страниц\r\n  };\r\n  const paginationRender = () => {\r\n    //Рендер пагинации\r\n    for (let page = conditionForRender(); page - 1 < pages.length; page++) {\r\n      arrayOfRenderedPages.push(page);\r\n      if (pages.length === page) {\r\n        // если страницы закончились\r\n        return [...arrayOfRenderedPages];\r\n      }\r\n      if (arrayOfRenderedPages.length >= paginationOffset * 2) {\r\n        // если массив заполнился\r\n        return [...arrayOfRenderedPages];\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination justify-content-center align-items-center my-3 row\">\r\n      {currentPage > paginationOffset + 1 ? (\r\n        <li className=\"page-item\">\r\n          <Link\r\n            className=\"page-link\"\r\n            to={`${url}?page=1`}\r\n            style={{ height: '38px' }}\r\n          >\r\n            1\r\n          </Link>\r\n        </li>\r\n      ) : null}\r\n      {currentPage > 1 ? (\r\n        <li className=\"page-item\">\r\n          <Link\r\n            className=\"page-link\"\r\n            style={{ height: '38px' }}\r\n            to={`${url}?page=${currentPage - 1}`}\r\n          >\r\n            <svg\r\n              width=\"1em\"\r\n              height=\"1em\"\r\n              viewBox=\"0 0 16 16\"\r\n              className=\"bi bi-arrow-left\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\r\n              />\r\n            </svg>\r\n          </Link>\r\n        </li>\r\n      ) : null}\r\n      {paginationRender().map((page) => (\r\n        <PaginationItem\r\n          page={page}\r\n          currentPage={currentPage}\r\n          url={url}\r\n          key={page}\r\n        />\r\n      ))}\r\n      {currentPage + 1 <= pages.length ? (\r\n        <li className=\"page-item\">\r\n          <Link\r\n            className=\"page-link\"\r\n            to={`${url}?page=${currentPage + 1}`}\r\n            style={{ height: '38px' }}\r\n          >\r\n            <svg\r\n              width=\"1em\"\r\n              height=\"1em\"\r\n              viewBox=\"0 0 16 16\"\r\n              className=\"bi bi-arrow-right\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"\r\n              />\r\n            </svg>\r\n          </Link>\r\n        </li>\r\n      ) : null}\r\n      {currentPage + paginationOffset + 1 < pages.length ? (\r\n        <li className=\"page-item\">\r\n          <Link\r\n            style={{ height: '38px' }}\r\n            className=\"page-link\"\r\n            to={`${url}?page=${pages.length}`}\r\n          >\r\n            {pages.length}\r\n          </Link>\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from 'react';\r\n\r\nconst Select = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleIsOpen = () => {\r\n    if (isOpen) setIsOpen(false);\r\n    if (!isOpen) setIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <button className=\"btn btn-dark p-0\" onClick={() => toggleIsOpen()}>\r\n        {(\r\n          <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n            {props.label}\r\n            <svg\r\n              width=\"1em\"\r\n              height=\"1em\"\r\n              viewBox=\"0 0 16 16\"\r\n              className=\"bi bi-arrow-down\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        ) || 'Loading..'}\r\n      </button>\r\n      {isOpen && (\r\n        <ul className=\"list-group list-group-flush\">\r\n          {props.error && <li className=\"list-group-item text-dark\">Error</li>}\r\n          {props.isLoading && (\r\n            <li className=\"list-group-item text-dark\">Loading...</li>\r\n          )}\r\n          {props.children}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Error404 from '../../components/error404';\r\nimport Loading from '../../components/loading';\r\nimport Pagination from '../../components/pagination';\r\nimport Select from '../../components/select';\r\nimport TopBar from '../../components/topBar';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { cardLimit, inputFilter } from '../../utils';\r\n\r\nconst Main = (props) => {\r\n  //hooks\r\n  //types hooks\r\n  const [\r\n    { isLoading: isLoadingTypes, response: responseTypes, error: errorTypes },\r\n    doFetchTypes,\r\n  ] = useFetch(`/types`);\r\n  const [\r\n    {\r\n      isLoading: isLoadingSubTypes,\r\n      response: responseSubTypes,\r\n      error: errorSubTypes,\r\n    },\r\n    doFetchSubTypes,\r\n  ] = useFetch(`/subtypes`);\r\n  const [currentSelect, setCurrentSelect] = useState({});\r\n  const [subtypesFilter, setSubtypesFilter] = useState();\r\n  const [typesFilter, setTypesFilter] = useState();\r\n  const [inputsValues, setInputsValues] = useState({\r\n    type: '',\r\n    subtype: '',\r\n  });\r\n  //cards hooks\r\n  const [\r\n    { isLoading: isLoadingCards, response: responseCards, error: errorCards },\r\n    doFetchCards,\r\n  ] = useFetch('/cards');\r\n  const [params, setParams] = useState('');\r\n\r\n  //получение селектов\r\n  useEffect(() => {\r\n    doFetchTypes();\r\n    doFetchSubTypes();\r\n  }, [doFetchTypes, doFetchSubTypes]);\r\n\r\n  // добавление типов и подтипов в state для фильта\r\n\r\n  useEffect(() => {\r\n    setSubtypesFilter(responseSubTypes && responseSubTypes.data.subtypes);\r\n    setTypesFilter(responseTypes && responseTypes.data.types);\r\n  }, [setSubtypesFilter, setTypesFilter, responseSubTypes, responseTypes]);\r\n\r\n  // сетим параметры селектов, если они заданы в url\r\n  useEffect(() => {\r\n    if (!currentSelect.subtype && props.match.params.subtypeId) {\r\n      setCurrentSelect({\r\n        ...currentSelect,\r\n        subtype: props.match.params.subtypeId,\r\n      });\r\n    }\r\n    if (!currentSelect.type && props.match.params.typeId) {\r\n      setCurrentSelect({\r\n        ...currentSelect,\r\n        type: props.match.params.typeId,\r\n      });\r\n    }\r\n  }, [props.match.params.subtypeId, props.match.params.typeId, currentSelect]);\r\n\r\n  //сетим параметры для fetch\r\n  useEffect(() => {\r\n    setParams({\r\n      method: 'get',\r\n      params: {\r\n        types: currentSelect.type || props.match.params.typeId || null,\r\n        subtype: currentSelect.subtype || props.match.params.subtypeId || null,\r\n        pageSize: cardLimit,\r\n        page: parseInt(props.location.search.replace(/[^\\d]/g, '')) || 1,\r\n      },\r\n    });\r\n  }, [props.match, props.location.search, currentSelect]);\r\n\r\n  // запрос на сервер с указанными параметрами\r\n  useEffect(() => {\r\n    params && doFetchCards(params);\r\n  }, [doFetchCards, params]);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 selects\">\r\n            {/* рендер селектов происходит здесь для того чтобы просто сетить данные */}\r\n            <Select\r\n              error={errorTypes ? errorTypes : null}\r\n              isLoading={isLoadingTypes ? isLoadingTypes : null}\r\n              label={'Types'}\r\n            >\r\n              {responseTypes && (\r\n                <input\r\n                  className=\"form-control bg-secondary text-white\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    inputFilter(responseTypes.data.types, e, setTypesFilter);\r\n                    setInputsValues({\r\n                      ...inputsValues,\r\n                      type: e.target.value,\r\n                    });\r\n                  }}\r\n                  defaultValue={inputsValues.type || ''}\r\n                />\r\n              )}\r\n              <li className=\"list-group-item\">\r\n                <Link\r\n                  className=\"text-dark\"\r\n                  onClick={() =>\r\n                    setCurrentSelect({\r\n                      ...currentSelect,\r\n                      type: null,\r\n                    })\r\n                  }\r\n                  to={\r\n                    currentSelect.subtype\r\n                      ? `/cards/subtype/${currentSelect.subtype}`\r\n                      : '/'\r\n                  }\r\n                >\r\n                  All Types\r\n                </Link>\r\n              </li>\r\n              {typesFilter &&\r\n                typesFilter.map((type, index) => (\r\n                  <li key={index} className=\"list-group-item\">\r\n                    <Link\r\n                      className=\"text-dark\"\r\n                      onClick={() =>\r\n                        setCurrentSelect({\r\n                          ...currentSelect,\r\n                          type: type,\r\n                        })\r\n                      }\r\n                      to={\r\n                        currentSelect.subtype\r\n                          ? `/cards/type/${type}/subtype/${currentSelect.subtype}`\r\n                          : `/cards/type/${type}`\r\n                      }\r\n                    >\r\n                      {type}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n            </Select>\r\n            <Select\r\n              error={errorSubTypes ? errorSubTypes : null}\r\n              isLoading={isLoadingSubTypes ? isLoadingSubTypes : null}\r\n              label=\"Subtypes\"\r\n            >\r\n              {responseSubTypes && (\r\n                <input\r\n                  className=\"form-control bg-secondary text-white\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    inputFilter(\r\n                      responseSubTypes.data.subtypes,\r\n                      e,\r\n                      setSubtypesFilter\r\n                    );\r\n                    setInputsValues({\r\n                      ...inputsValues,\r\n                      subtype: e.target.value,\r\n                    });\r\n                  }}\r\n                  defaultValue={inputsValues.subtype || ''}\r\n                />\r\n              )}\r\n              <li className=\"list-group-item \">\r\n                <Link\r\n                  className=\"text-dark\"\r\n                  onClick={() =>\r\n                    setCurrentSelect({\r\n                      ...currentSelect,\r\n                      subtype: null,\r\n                    })\r\n                  }\r\n                  to={\r\n                    currentSelect.type\r\n                      ? `/cards/type/${currentSelect.type}`\r\n                      : '/'\r\n                  }\r\n                >\r\n                  All Subtypes\r\n                </Link>\r\n              </li>\r\n              {subtypesFilter &&\r\n                subtypesFilter.map((subtype, index) => (\r\n                  <li key={index} className=\"list-group-item\">\r\n                    <Link\r\n                      className=\"text-dark\"\r\n                      onClick={() =>\r\n                        setCurrentSelect({\r\n                          ...currentSelect,\r\n                          subtype: subtype,\r\n                        })\r\n                      }\r\n                      to={\r\n                        currentSelect.type\r\n                          ? `/cards/type/${currentSelect.type}/subtype/${subtype}`\r\n                          : `/cards/subtype/${subtype}`\r\n                      }\r\n                    >\r\n                      {subtype}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n          <div className=\"col-md-8 cards\">\r\n            <div\r\n              className=\"row justify-content-center\"\r\n              style={{ overflow: 'hidden' }}\r\n            >\r\n              {errorCards && <div className=\"error\">Error</div>}\r\n              {isLoadingCards && <Loading />}\r\n              {!isLoadingCards &&\r\n                responseCards &&\r\n                (responseCards.data.cards.length === 0 ? <Error404 /> : null)}\r\n              {!isLoadingCards &&\r\n                responseCards &&\r\n                responseCards.data.cards.map((card) => (\r\n                  <div className=\"col-md-4 rounded\" key={card.id}>\r\n                    <div className=\"card mb-3 bg-light\">\r\n                      <img\r\n                        className=\"card-img-top\"\r\n                        src={card.imageUrl}\r\n                        alt={`${card.name} img`}\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{card.name}</h3>\r\n                        <div className=\"card-text\">Artist: {card.artist}</div>\r\n                      </div>\r\n                      <Link\r\n                        className=\"btn btn-dark\"\r\n                        to={{\r\n                          pathname: `/cards/${card.id}`,\r\n                          state: { from: props.location },\r\n                        }}\r\n                      >\r\n                        Подробнее\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            {responseCards && (\r\n              <Pagination\r\n                total={responseCards.headers['total-count']}\r\n                limit={cardLimit}\r\n                currentPage={\r\n                  parseInt(props.location.search.replace(/[^\\d]/g, '')) || 1\r\n                }\r\n                url={`${props.match.url}`}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const [token] = useLocalStorage('token');\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        token ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: '/login', state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport CardItem from './pages/cardItem';\r\nimport Authentication from './pages/authentication';\r\nimport Main from './pages/main';\r\nimport PrivateRoute from './components/privateRoute';\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" component={Authentication} />\r\n      <PrivateRoute path=\"/\" exact component={Main} />\r\n      <PrivateRoute path=\"/cards/:id\" exact component={CardItem} />\r\n      <PrivateRoute path=\"/cards/type/:typeId\" exact component={Main} />\r\n      <PrivateRoute path=\"/cards/subtype/:subtypeId\" component={Main} />\r\n      <PrivateRoute\r\n        path=\"/cards/type/:typeId/subtype/:subtypeId\"\r\n        component={Main}\r\n      />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport CurrentUserChecker from './components/currentUserChecker';\nimport { CurrentUserProvider } from './context/currentUserContext';\nimport Routes from './routes';\n\nReactDOM.render(\n  <CurrentUserProvider>\n    <CurrentUserChecker>\n      <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Routes />\n        </BrowserRouter>\n      </React.StrictMode>\n    </CurrentUserChecker>\n  </CurrentUserProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}